/*
    Some additional files are required to build the project:
    1. Google configuration from
        https://console.firebase.google.com/u/0/project/smailer-24874/settings/general/android:com.bopr.android.smailer
        should be put into app/google-services.json
    2.  Signing keystore should be put into /app/keystore.p12
    3.  Signing and other user specific parameters should be put into /app/local.gradle (see local.gradle.sample)

    To run debug flavor add SHA-1 fingerprint from
    <user_dir>/.android/debug.keystore (password "android") to api console:
    https://console.developers.google.com/apis/credentials/oauthclient/376904884028-f0m6ki37c8b4cf93aktk0jgag3tiu922.apps.googleusercontent.com?project=smailer-24874

    Uninstall all application"s apk-s from device before running tests cause they may lead to unpredictable results

*/

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-allopen'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

apply {
    from('user.gradle')

    if (file('local.gradle').exists()) {
        from('local.gradle')
    } else {
        def local_gradle = '../.github/workflows/local.gradle'
        if (file(local_gradle).exists()) {
            from(local_gradle)
        } else {
            throw new InvalidUserDataException('Required local.gradle file')
        }
    }
}

/* check signing keystore */

if (!file('keystore.p12').exists()) {
    throw new InvalidUserDataException('Required file /app/keystore.p12')
}

android {
    namespace 'com.bopr.android.smailer'
    compileSdk 35

    defaultConfig {
        versionCode 100
        versionName '1.10.1'
        applicationId 'com.bopr.android.smailer'
        minSdkVersion 21
        targetSdk 34
        base.archivesName = "smailer-$versionName"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        free.java.srcDirs += 'src/free/kotlin'
        paid.java.srcDirs += 'src/paid/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    signingConfigs {
        release {
            keyAlias 'sample'
            storeFile file('keystore.p12')
            storePassword store_password
            keyPassword key_password
        }
    }

    buildTypes {
        configureEach {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue('string', 'developer_email', developer_email)
            resValue('string', 'fcm_server_key', fcm_server_key)
        }
        debug {
            signingConfig signingConfigs.debug
            shrinkResources false
            minifyEnabled false
            manifestPlaceholders = [crashlyticsEnabled: 'false']
            getIsDefault().set(true)
        }
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            manifestPlaceholders = [crashlyticsEnabled: 'true']
        }
    }

    flavorDimensions += 'main'

    productFlavors {
        paid {
            dimension 'main'
            getIsDefault().set(true)
        }
        free {
            dimension 'main'
        }
    }

    compileOptions {
        sourceCompatibility = 21
        targetCompatibility = 21
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        resources {
            pickFirsts += [
                    'META-INF/DEPENDENCIES',
                    'META-INF/LICENSE.txt',
                    'META-INF/LICENSE.md',
                    'META-INF/NOTICE.md',
                    'META-INF/kotlinx-html.kotlin_module'
            ]
        }
    }

    configurations {
        configureEach {
            exclude group: 'org.apache.httpcomponents'
            exclude group: 'commons-logging', module: 'commons-logging'
            exclude group: 'com.google.guava', module: 'listenablefuture'
        }
    }

    lint {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.work:work-runtime-ktx:2.10.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.github.tony19:logback-android:3.0.0'
    implementation 'com.google.android.gms:play-services-auth:21.2.0'
    implementation 'com.google.android.gms:play-services-location:21.3.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.api-client:google-api-client-android:2.7.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev99-1.23.0'
    implementation 'com.google.apis:google-api-services-gmail:v1-rev98-1.25.0'
    implementation 'com.google.firebase:firebase-analytics:22.1.2'
    implementation 'com.google.firebase:firebase-crashlytics:19.2.1'
    implementation 'com.google.firebase:firebase-messaging:24.0.3'
    implementation 'com.sun.mail:android-mail:1.6.7'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.0.21'
    implementation 'org.slf4j:slf4j-api:2.0.16'

    freeImplementation 'com.google.android.gms:play-services-ads:23.5.0'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'org.mockito:mockito-android:5.14.2'
}

allOpen {
    annotation 'com.bopr.android.smailer.util.Mockable'
}

preBuild.finalizedBy updateReleaseInfo

assemble.finalizedBy uploadRelease

//afterEvaluate {
//    assembleDebug.finalizedBy uploadRelease
//}