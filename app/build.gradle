/*
    Some additional files are required to build the project:
    1. Google configuration from
        https://console.firebase.google.com/u/0/project/smailer-24874/settings/general/android:com.bopr.android.smailer
        should be put into app/google-services.json
    2.  Signing keystore should be put into /app/keystore.p12
    3.  Signing and other user specific parameters should be put into /app/local.gradle (see local.gradle.sample)

    To run debug flavor add SHA-1 fingerprint from
    <user_dir>/.android/debug.keystore (password "android") to  api console:
    https://console.developers.google.com/apis/credentials/oauthclient/376904884028-f0m6ki37c8b4cf93aktk0jgag3tiu922.apps.googleusercontent.com?project=smailer-24874

    Uninstall all application"s apk-s from device before running tests cause they may lead to unpredictable results

*/

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-allopen"
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"
apply from: "user.gradle"

if (file("local.gradle").exists()) {
    apply from: "local.gradle"
} else {
    apply from: "../.github/workflows/local.gradle"
}

android {

    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        versionCode 92
        versionName "1.8.8"
        versionNameSuffix "-kt"
        applicationId "com.bopr.android.smailer"
        minSdkVersion 21
        targetSdkVersion 29
        archivesBaseName = "smailer-${versionName}${versionNameSuffix}"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        debug.java.srcDirs += "src/debug/kotlin"
        staging.java.srcDirs += "src/staging/kotlin"
        free.java.srcDirs += "src/free/kotlin"
        paid.java.srcDirs += "src/paid/kotlin"
        androidTest.java.srcDirs += "src/androidTest/kotlin"
    }

    signingConfigs {
        release {
            keyAlias "sample"
            storeFile file("keystore.p12")
            storePassword store_password
            keyPassword key_password
        }
    }

    buildTypes {
        all {
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            resValue("string", "developer_email", developer_email)
            resValue("string", "fcm_server_key", fcm_server_key)
        }
        debug {
            signingConfig signingConfigs.debug
            shrinkResources false
            minifyEnabled false
            manifestPlaceholders = [crashlyticsEnabled: "false"]
        }
        staging {
            signingConfig signingConfigs.debug
            shrinkResources true
            minifyEnabled true
            manifestPlaceholders = [crashlyticsEnabled: "true"]
        }
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            manifestPlaceholders = [crashlyticsEnabled: "true"]
        }
    }

    flavorDimensions "main"

    productFlavors {
        paid {
            dimension "main"
        }
        free {
            dimension "main"
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        pickFirst "META-INF/LICENSE.txt"
        pickFirst "META-INF/DEPENDENCIES"
        pickFirst "META-INF/kotlinx-html.kotlin_module"
    }

    configurations {
        all {
            exclude group: "org.apache.httpcomponents"
            exclude group: "commons-logging", module: "commons-logging"
            exclude group: "com.google.guava", module: "listenablefuture"
        }
    }

}

repositories {
    jcenter()
    google()
}

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "androidx.work:work-runtime-ktx:2.4.0"
    implementation "com.github.tony19:logback-android:2.0.0"
    implementation "com.google.android.gms:play-services-auth:18.1.0"
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation "com.google.android.material:material:1.2.1"
    implementation 'com.google.api-client:google-api-client-android:1.30.11'
    implementation "com.google.apis:google-api-services-drive:v3-rev99-1.23.0"
    implementation "com.google.apis:google-api-services-gmail:v1-rev98-1.25.0"
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation "com.sun.mail:android-mail:1.6.5"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "com.android.volley:volley:1.1.1"

    freeImplementation 'com.google.android.gms:play-services-ads:19.5.0'

    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation 'junit:junit:4.13.1'
    androidTestImplementation "org.mockito:mockito-android:3.2.4"
}

allOpen {
    annotation("com.bopr.android.smailer.util.Mockable")
}
